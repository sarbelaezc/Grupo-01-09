----------------------------------SRC----------------------------------------------
1. Arrendamiento.java: Guarda el cliente oferenete y el demandador, los relaciona como un contrato de arrendamiento.
2. Compraventan.java: Guarda el cliente oferente y el demandador, hace explicita la relacion de quien vende con quien compra.
3. GestorArchivos.java: Se encarga de almacenar, buscar y leer los datos del sistema en un archivo "Datos.obj".
4. Apartamento.java: Representa un inmueble de tipo apartamento.
5. Balcon.java: Representa la capacidad de un inmueble de tener un balcon con un area.
6. Bano.java: Representa la capacidad de un inmueble de tener uno o mas baños.
7. Casa.java: Representa un inmueble de tipo casa con los atributos solicitados.
8. Cuarto.java: Clase abstracta de la que heredan atributos y metodos la clase pieza y baño.
9. Garaje.java: Representa la capacidad de un inmueble de poseer un garaje.
10. Inmuebles.java: Clase que permite agrupar apartamento y casa bajo el mismo tipo de objeto.
11. Pieza.java: Representa la capacidad de un inmueble de tener un cuarto con cualquier tipo de uso.
12. ServiciosAdicionales.java: Representa la capacidad de una unidad de poseer diferente tipo de servicios.
13. Terraza.java: Representa al capacidad de una casa de poseer terraza.
14. Torre.java: Representa un objeto que agrupa los apartamentos bajo una torre.
15. Unidad.java: Esta clase agrupa casas y apartamentos bajo una unidad.
16. Administrador.java: Esta clase representa el administrador del programa con todo lo que impica.
17. Cliente.java: Esta clase representa tanto al cliente anonimo como al cliente registrado con las funciones respectivas.
18. Demandador.java: Esta clase representa la facultad de un cliente de ser demandador con todos los atributos que trae.
19. Funcionario.java: Esta clase representa el empleado de planta de la empresa y se encarga de las funciones administrativas que tiene asignadas.
20. Funcionariojefe.java: Esta clase representa el funcionario jefe y todas sus funciones.
21. Persona.java: Clase abstracta padre de todos los usuarios.
22. SuPropiedadRaiz.java: Esta clase es la clase principal del programa.
23. MenuDeConsola.java: Esta clase implementa un menu de consola en formato DOS.
24. OpcionAsignarRolCliente.java: Esta opcion representa la capacidad de funcionario de cmabiarle el rol a un cliente seleccionado.
25. OpcionAsignarRolInmueble.java: Representa la opcion del funcionario de asignarle un rol especifico a un inmuble.
26. OpcionBuscarAptoArriendo.java: Esta clase representa la opcion de funcionario de buscar apartamentos en arriendo.
27. OpcionBuscarAptoEspeA.java: Representa la opcion de funcionario que le permite buscar un apartamento especifico.
28. OpcionBuscarCasaArriendo.java: Esta clase representa la opcion del funcinario para buscar todas las casas en arriendo.
29. OpcionBuscarCasaEspeA.java: Esta opcion representa la opcion de funcionario de buscar una casa especifica.
30. OpcionBuscarInmueblesArrendados.java: Representa la opcion de cliente de buscar los inmuebles que tiene arrendados.
31. OpcionClientesDeFuncionario.java: Esta clase representa la capacidad de un funcionario jefe de ver que clientes tienen sus funcionarios.
32. OpcionComisionArriendos.java: Esta clase representa la opcion del funcionario que le muestra las comisiones mensuales por arriendos.
33. OpcionComisionVentas.java: Representa la capacidad del funcionario para ver cuanto sera su comision mensual por ventas.
34. OpcionConsignarInmuebleArrenda: Representa la opcion de cliente de ver que apartamentos ha puesto para arrendar.
35. OpcionConsignarInmuebleVenta: Representa la opcion de cliente para ver que inmuebles a puesto en venta.
36. OpcionDeMenu.java: Esta clase abstracta es la clase padre de todo tipo de opciones de menu diferentes para todo tipo de usuarios.
37. OpcionEliminarDeUsuario.java: Esta es al clase en la que se define la opcion del administrador de eliminar una opcion de un usuario seleccionado.
38. OpcionesExistentes.java: Esta clase es la encargada de mostrar y alojar las opciones existentes en el sistema sin importar el usuario.
39. OpcionFuncionariosACargo.java: Esta clase representa la capacidad del funcionario jefe de ver que funcionarios tiene bajo su cargo.
40. OpcionNuevaUsuario.java: Esta clase representa la opcion del administrador de agregarle una opcion existente a un usuario.
41. OpcionNuevoFuncionario.java: Esta clase representa la capacidad del funcionario jefe de registrar un nuevo funcionario en el sistema bajo su cargo.
42. OpcionNuevoFuncionarioJ.java: Esta clase representa la capacidad del administrador para crear un funcionario jefe.
43. OpcionRegistrarArrendamiento.java: Representa la capacidad de funcionario de registrar un apartamento para arrendamiento en el sistema.
44. OpcionRegistrarCliente.java: Esta clase represental a capacidad de un funcionario de registrar un cliente nuevo.
45. OpcionRegistrarCompraVenta.java: Representa la opcion de un funcionario de registrar un inmueble en compra-venta.
46. OpcionRegistrarInmueble.java: Representa la opcion de un funcionario de registrar un inmueble a su nombre.
47. OpcionSalarioNeto.java: Esta representa la opcion del funcionario de mostrar cual es el salario neto que va a recibir.
48. OpcionSalir.java: Esta clase representa la opcion salir del sistema con la cual termina su ejecucion.
49. OpcionUsuarioInvitado.java: Esta clase representa al usuario anonimo o invitado, pregunta lso datos, lo crea y lo almacena para el gestor de archivos.
50. OpcionUsuarioRegistrado.java: Esta clase representa el login de un usuario registrado.
51. OpcionVerListaClientes.java: Esta clase representa la opcion del funcionario de ver todos los clientes que tiene a cargo.
52. OpcionVerUsuario.java: Esta clase representa la opcion del administrador de ver las opciones como si fuera un usuario dado.
------------------------------------------------------------------------------------------------------------------------------------
53. UML.jpg : Esta imagene es el diagrama de clases del proyecto para facilitar la lectura que no se pueda ver bien en el word.
------------------------------------------------------------------------------------------------------------------------------------
54. Memoria-escrita-1-POO: Articulo a 1 columna con detalles sobre la forma de resolver el trabajo encargado.